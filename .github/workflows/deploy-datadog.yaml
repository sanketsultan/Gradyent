name: Deploy Datadog Agent to EKS

on:
  workflow_dispatch:

jobs:
  uninstall:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Update kubeconfig for EKS
        run: |
          aws eks update-kubeconfig --region ${{ secrets.AWS_REGION }} --name ${{ secrets.EKS_CLUSTER_NAME }}

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: 'latest'

      - name: Uninstall existing Datadog Agent Helm release
        run: |
          helm uninstall datadog-agent || true
          kubectl delete clusterrole datadog-agent-cluster-agent --ignore-not-found
          kubectl delete clusterrolebinding datadog-agent-cluster-agent --ignore-not-found

  deploy:
    runs-on: ubuntu-latest
    needs: uninstall
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Update kubeconfig for EKS
        run: |
          aws eks update-kubeconfig --region ${{ secrets.AWS_REGION }} --name ${{ secrets.EKS_CLUSTER_NAME }}

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: 'latest'

      - name: Deploy Datadog Agent with custom values
        env:
          DATADOG_API_KEY: ${{ secrets.DATADOG_API_KEY }}
        run: |
          helm repo add datadog https://helm.datadoghq.com
          helm repo update
          kubectl create secret generic datadog-secret --from-literal api-key=$DATADOG_API_KEY -n datadog --dry-run=client -o yaml | kubectl apply -f -
          helm upgrade --install datadog-agent datadog/datadog \
              --namespace datadog \
              -f observability/datadog-values.yaml

      - name: Check Datadog Agent pods status
        run: |
          kubectl get pods -n datadog
          kubectl wait --for=condition=Ready pod -l app=datadog-agent -n datadog --timeout=180s
